name: Publish Prod version

on:
  push:
    branches:
      - "master"

jobs:
  publish-prod:
    name: "Publish Prod to NPM"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit version UP
        run: |
          npm version minor -m "Release new version %s"
          git push origin master
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Install dependencies
        run: npm install

      - name: Lint the project
        run: npm run lint

      - name: Build the project
        run: npm run build
        env:
          CI: true
      - name: Authenticate with Registry
        run: |
          echo "init-author-name=Ronny Antoon" > .npmrc
          echo "init-author-email=ronnyantoon@gmail.com" >> .npmrc
          echo "always-auth=true" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
          echo "_authToken=$NPM_TOKEN" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Publish to NPM
        run: |
          npm publish --tag latest
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Set Current Version
        id: set_current_version
        shell: bash -ex {0}
        run: |
          CURRENT_VERSION=$(node -p 'require("./package.json").version')
          echo "::set-output name=CURRENT_VERSION::${CURRENT_VERSION}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.set_current_version.outputs.CURRENT_VERSION }}
          release_name: v${{ steps.set_current_version.outputs.CURRENT_VERSION }}
          body: "Release version to production NPM"
          draft: false
          prerelease: false

